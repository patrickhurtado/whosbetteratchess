{"version":3,"sources":["logo.svg","api/chesscom.js","components/PlayerCard.js","components/TitleCard.js","components/ScoreCompareCard.js","utils/scoresUtils.js","screens/VersusScreen.js","App.js","reportWebVitals.js","index.js"],"names":["chessdotcom","chessAPI","PlayerCard","props","player","console","log","isEmpty","style","margin","src","avatar","width","height","name","chess_rapid","last","rating","TitleCard","ScoreCompareCard","player1","player2","name1","name2","eloDifference","compareRapidScores","worsePlayer","whosBetterString","Math","abs","styles","playerCard","display","flexDirection","alignItems","justifyContent","VersusScreen","useState","setPlayer1","setPlayer2","loading","setLoading","useEffect","player1Info","player2Info","push","getPlayer","getPlayerStats","promise1","Promise","all","then","bodies","body","promise2","finally","className","App","logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7455aee5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import chessAPI from \"chess-web-api\";\nconst chessdotcom = new chessAPI();\n\nexport default chessdotcom;","import isEmpty from \"lodash.isempty\";\n\nconst PlayerCard = (props) => {\n  const { player } = props;\n\n  console.log(player);\n\n  return !isEmpty(player) ? (\n    <div style={{ margin: 10 }}>\n      <img src={player.avatar} width={300} height={300} />\n      <p> {player.name} </p>\n      <p> {\"Rapid rating: \" + player.chess_rapid.last.rating} </p>\n    </div>\n  ) : (<></>)\n};\n\nexport default PlayerCard;","const TitleCard = () => {\n  return (\n    <h1>Who's better at chess?</h1>\n  )\n};\n\nexport default TitleCard;","import isEmpty from \"lodash.isempty\";\nimport { compareRapidScores } from \"utils/scoresUtils\";\n\nconst ScoreCompareCard = (props) => {\n  const { player1, player2 } = props;\n  const { name: name1 } = player1;\n  const { name: name2 } = player2;\n\n  const eloDifference = compareRapidScores(player1, player2);\n  const betterPlayer = eloDifference > 0 ? name1 : name2;\n  const worsePlayer = eloDifference > 0 ? name2 : name1;\n  let whosBetterString = `Currently, ${betterPlayer} is better than ${worsePlayer} by ${Math.abs(eloDifference)} points`;\n  if (eloDifference === 0) whosBetterString = \"It's a tie!\";\n  return (\n    <div>\n      <h2> {whosBetterString} </h2>\n    </div>\n  );\n};\n\nexport default ScoreCompareCard;","export const compareRapidScores = (player1, player2) => {\n  return player1.chess_rapid.last.rating - player2.chess_rapid.last.rating\n};","import { useEffect, useState } from \"react\";\nimport chessAPI from \"api/chesscom\";\nimport PlayerCard from \"components/PlayerCard\";\nimport TitleCard from \"components/TitleCard\";\nimport ScoreCompareCard from \"components/ScoreCompareCard\";\nconst VersusScreen = (props) => {\n\n  const { name1, name2 } = props;\n\n  const [player1, setPlayer1] = useState({});\n  const [player2, setPlayer2] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const player1Info = [];\n    const player2Info = [];\n\n    player1Info.push(chessAPI.getPlayer(name1));//.then(({ body }) => setPlayer1({ ...player1, ...body }));\n    player1Info.push(chessAPI.getPlayerStats(name1))//.then(({ body }) => setPlayer1({ ...player1, ...body }));\n    const promise1 = Promise.all(player1Info).then(bodies => setPlayer1({ ...bodies[0].body, ...bodies[1].body }))\n\n    player2Info.push(chessAPI.getPlayer(name2));//.then(({ body }) => setPlayer1({ ...player1, ...body }));\n    player2Info.push(chessAPI.getPlayerStats(name2))//.then(({ body }) => setPlayer1({ ...player1, ...body }));\n    const promise2 = Promise.all(player2Info).then(bodies => setPlayer2({ ...bodies[0].body, ...bodies[1].body }))\n\n    Promise.all([promise1, promise2]).finally(() => setLoading(false));\n  }, []);\n  console.log(loading);\n\n  return loading ? <></> : (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <TitleCard />\n        <div style={styles.playerCard}>\n          <PlayerCard player={player1} />\n          <PlayerCard player={player2} />\n        </div>\n        <ScoreCompareCard player1={player1} player2={player2} />\n      </header>\n    </div>\n  );\n};\n\nconst styles = {\n  playerCard: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n  }\n}\n\nexport default VersusScreen;","import logo from './logo.svg';\nimport './App.css';\nimport VersusScreen from \"screens/VersusScreen\";\n\n\nconst player1 = \"anastlemat\";\nconst player2 = \"danieldiurczak\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <VersusScreen name1={player1} name2={player2} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}