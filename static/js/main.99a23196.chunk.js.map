{"version":3,"sources":["logo.svg","api/chesscom.js","components/PlayerCard.js","screens/VersusScreen.js","App.js","reportWebVitals.js","index.js"],"names":["chessdotcom","chessAPI","PlayerCard","props","player","console","log","src","avatar","width","height","name","chess_rapid","last","rating","VersusScreen","name1","name2","useState","player1","setPlayer1","player2","setPlayer2","useEffect","getPlayer","then","body","getPlayerStats","className","App","logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAAe,G,MAAA,IAA0B,kC,8BCG1BA,EAFK,I,OAAIC,G,OCaTC,EAdI,SAACC,GAClB,IAAQC,EAAWD,EAAXC,OAIR,OAFAC,QAAQC,IAAIF,GAELA,EACL,gCACE,qBAAKG,IAAKH,EAAOI,OAAQC,MAAO,IAAKC,OAAQ,MAC7C,kCAAK,gBAAkBN,EAAOO,KAA9B,OACA,kCAAK,iBAAmBP,EAAOQ,YAAYC,KAAKC,OAAhD,UAEC,8BCkBQC,EAzBM,SAACZ,GACpB,IAAQa,EAAiBb,EAAjBa,MAAOC,EAAUd,EAAVc,MAEf,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAWA,OATAC,qBAAU,WACRtB,EAASuB,UAAUR,GAAOS,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcN,EAAW,2BAAKD,GAAYO,OACzEzB,EAAS0B,eAAeX,GAAOS,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcN,EAAW,2BAAKD,GAAYO,OAE9EzB,EAASuB,UAAUP,GAAOQ,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcJ,EAAW,2BAAKD,GAAYK,OACzEzB,EAAS0B,eAAeV,GAAOQ,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcJ,EAAW,2BAAKD,GAAYK,SAC7E,IAEHrB,QAAQC,IAAIa,GAEV,qBAAKS,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAAC,EAAD,CAAYxB,OAAQe,IACpB,cAAC,EAAD,CAAYf,OAAQiB,UCJbQ,MAXf,WACE,OACE,qBAAKD,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKrB,IAAKuB,EAAMF,UAAU,WAAWG,IAAI,SACzC,cAAC,EAAD,CAAcf,MARN,aAQsBC,MAPtB,yBCMDe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.99a23196.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import chessAPI from \"chess-web-api\";\nconst chessdotcom = new chessAPI();\n\nexport default chessdotcom;","const PlayerCard = (props) => {\n  const { player } = props;\n\n  console.log(player);\n\n  return player ? (\n    <div>\n      <img src={player.avatar} width={300} height={300} />\n      <p> {\"player info: \" + player.name} </p>\n      <p> {\"Rapid rating: \" + player.chess_rapid.last.rating} </p>\n    </div>\n  ) : (<></>)\n};\n\nexport default PlayerCard;","import { useEffect, useState } from \"react\";\nimport chessAPI from \"api/chesscom\";\nimport PlayerCard from \"components/PlayerCard\";\n\nconst VersusScreen = (props) => {\n  const { name1, name2 } = props;\n\n  const [player1, setPlayer1] = useState({});\n  const [player2, setPlayer2] = useState({});\n\n  useEffect(() => {\n    chessAPI.getPlayer(name1).then(({ body }) => setPlayer1({ ...player1, ...body }));\n    chessAPI.getPlayerStats(name1).then(({ body }) => setPlayer1({ ...player1, ...body }));\n\n    chessAPI.getPlayer(name2).then(({ body }) => setPlayer2({ ...player2, ...body }));\n    chessAPI.getPlayerStats(name2).then(({ body }) => setPlayer2({ ...player2, ...body }));\n  }, []);\n\n  console.log(player1);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <PlayerCard player={player1} />\n        <PlayerCard player={player2} />\n      </header>\n    </div>\n  );\n};\n\nexport default VersusScreen;","import logo from './logo.svg';\nimport './App.css';\nimport VersusScreen from \"screens/VersusScreen\";\n\n\nconst player1 = \"anastlemat\";\nconst player2 = \"danieldiurczak\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <VersusScreen name1={player1} name2={player2} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}